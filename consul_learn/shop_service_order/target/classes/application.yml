# 配置服务访问端口
server:
  port: 8001
# 配置数据库连接
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shop?serverTimezone=UTC
    username: root
    password: root
  application:
    name: shop_service_order
  # consul配置
  cloud:
    consul:
      # 配置访问consulServer的访问地址
      host: localhost
      # 配置端口
      port: 8500
      # 服务注册与发现的配置
      discovery:
        # 是否注册
        register: true
        # 实例id
        instance-id: ${spring.application.name}:${server.port}
        # 服务实例名称
        service-name: ${spring.application.name}
        # 服务实例端口
        port: ${server.port}
        # 健康检查路径
        health-check-path: /actuator/health
        # 健康检查时间间隔
        health-check-interval: 15s
        # 开启IP地址注册
        prefer-ip-address: true
        # 实例的请求ip
        ip-address: ${spring.cloud.client.ip-address}

# 配置mybatis扫描对象
mybatis:
  mapper-locations: mapper/*.xml

# 配置负载均衡策略(需要调用的微服务名称)
# 格式：serviceID.ribbon.NFLoadBalancerRuleClassName
shop-service-product:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    ConnectTimeout: 250 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数